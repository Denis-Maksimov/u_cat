#ifndef __U5_TIMERu_H__
#define __U5_TIMERu_H__

#include <u_stdlib/u_stddef.h>


#include <time.h>
C_START
// uint32_t SysTick_VAL;
// typedef clock_t u_clock_t;
typedef double u_timeval_t;



typedef struct
{
    u_timeval_t stv;
    // u32 value;
    u8 state:1;
    u8 state_pext:1;
}u_timer_double;

/*************************************************
* Формирователь импульса
* 
* ___|▔▔▔▔▔|____________      set 1
*
* ___|▔▔▔▔▔|____________      return 1
* 
* ___|▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔|__      set 2
*
* ___|▔▔▔▔▔▔▔▔▔▔▔|______      return 2
*
* ___|▔▔▔▔▔▔▔▔▔▔▔|______      tv
*
**************************************************/
u32 u_pulse(u_timer_double* Tx, u_timeval_t tv, u16 set, u16 rst);




/*************************************************
* Формирователь продлённого импульса
* 
* ___|▔▔▔▔▔|____________      set
*
* ___|▔▔▔▔▔▔▔▔▔▔▔|______      return
*
* ___|▔▔▔▔▔▔▔▔▔▔▔|______      tv
*
**************************************************/
u32 u_pext(u_timer_double* Tx, u_timeval_t tv, u16 set, u16 rst);


/*************************************************
* Формирователь задержки включения
*  
* ___|▔▔▔▔▔▔▔|__________      set
*
* ______|▔▔▔▔|__________      return 
*
* ___|▔▔|_______________      tv
*
**************************************************/
u32 u_odt(u_timer_double* Tx, u_timeval_t tv, u16 set, u16 rst);


/*************************************************
* Формирователь задержки включения с запоминанием
*  
* ___|▔▔▔|____________      set
*
* _____________|▔▔▔▔▔▔      return
*
* ___|▔▔▔▔▔▔▔▔|_______      tv
*
**************************************************/
u32 u_odts(u_timer_double* Tx, u_timeval_t tv, u16 set, u16 rst);


/*************************************************
*  Формирователь задержки выключения
*  
* ___|▔▔▔▔▔|_____________   set
*
* 
* ___|▔▔▔▔▔▔▔▔▔▔▔▔|______   return
*
* _________|▔▔▔▔▔▔|______   tv
*
**************************************************/
u32 u_offdt(u_timer_double* Tx, u_timeval_t tv, u16 set, u16 rst);
//------------------------------------------------------------


int test_processing_v2();


C_END
#endif // __S5_TIMERu_H__
